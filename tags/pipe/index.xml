<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipe on A fractal spectrum of tales</title><link>https://www.mseri.me/tags/pipe/</link><description>Recent content in Pipe on A fractal spectrum of tales</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 21 Nov 2014 15:24:54 +0000</lastBuildDate><atom:link href="https://www.mseri.me/tags/pipe/index.xml" rel="self" type="application/rss+xml"/><item><title>Left pipe in Haskell</title><link>https://www.mseri.me/left-pipe-in-haskell/</link><pubDate>Fri, 21 Nov 2014 15:24:54 +0000</pubDate><guid>https://www.mseri.me/left-pipe-in-haskell/</guid><description>&lt;p>If you read this blog, you know that I am very biased by having worked with unix shells for almost two decades and that I am addicted to the use of pipes (see e.g. &lt;a href="https://www.mseri.me/piping-with-swift/">Piping with Swift&lt;/a>). I really find much more natural to see data moving from left to right.&lt;/p>
&lt;p>Yesterday I was thinking that in Haskell everything is an expression and that you can easily define infix operators. Thus it must be possible to implement a shell-like pipe.&lt;/p></description></item><item><title>Piping with Swift</title><link>https://www.mseri.me/piping-with-swift/</link><pubDate>Mon, 16 Jun 2014 10:03:04 +0000</pubDate><guid>https://www.mseri.me/piping-with-swift/</guid><description>&lt;p>Lately I&amp;rsquo;ve been playing with Apple&amp;rsquo;s newborn Swift quite a lot. I have to say that I am really impressed, and except for few things that I hope will be smoothed in the next months (years?), I find Swift really enjoyable and readable.&lt;/p>
&lt;p>However, there is one feature that I really miss. Something that I daily use with slightly different syntaxes in Sh, Haskell, Julia and Elixir: the &lt;strong>pipe&lt;/strong>!&lt;/p>
&lt;h3 id="can-we-implement-a-_kind-of_-pipe-in-swift"> &lt;a class="hanchor" href="#can-we-implement-a-_kind-of_-pipe-in-swift">#&lt;/a>&amp;nbsp;Can we implement a &lt;em>kind of&lt;/em> pipe in Swift?
&lt;/h3>
&lt;p>Given that in Swift &lt;code>|&lt;/code>, &lt;code>.&lt;/code> and &lt;code>||&lt;/code> have already quite precise and distinct meanings, I am going to mimic Julia and Elixir&amp;rsquo;s notation and use &lt;code>|&amp;gt;&lt;/code>.
Swift is unbelievably flexible from this point of view: one can easily define new generic &lt;code>infix&lt;/code>, &lt;code>prefix&lt;/code> or &lt;code>suffix&lt;/code> operator, and state their associativity and precedence properties. You&amp;rsquo;ll soon see that the syntax speaks by itself!&lt;/p></description></item></channel></rss>